package PFiches;

import java.io.IOException; //Pour gérer les fichiers
import java.util.Iterator; //Pour les itérateurs
import java.util.LinkedList; //Pour les linked list
import javax.swing.DefaultListModel; //Pour afficher une liste d'éléments dans une JList
import javax.swing.JOptionPane; //Pour afficher les messages
import projetvtc.Avis; //Pour les avis
import projetvtc.Conducteur; //Pour les conducteurs
import projetvtc.Disponibilite;

public class FAvisCond extends javax.swing.JDialog {

    private Conducteur C; //pour stocker le conducteur
    private LinkedList<Avis> listeAvis; //linked list pour stocker les avis sur le conducteur

    public FAvisCond(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        listeAvis = new LinkedList<>(); //On initialise la linked list
    }

    public void initCond(Conducteur cond) { //pour initialise C
        double moyenne;
        String m;
        C = cond; //on initialise C avec le conducteur qui se connecte ou s'inscrit
        moyenne = C.getMoyenne(); //On récupère
        m = String.valueOf(moyenne); //On convertit la moyenne en string
        tfMoyenne.setText(m); //On affiche la moyenne convertit en string
        this.chargerAvis(); //On lance la fonction pour charger les avis
    }

    private void chargerAvis() { //Pour afficher les avis dans la jlist
        listeAvis = C.getListeAvis(); //on récupère la liste des avis du conducteur
        DefaultListModel dlm = new DefaultListModel(); //On créé une liste de models qui permettra d'afficher les avis
        Iterator<Avis> itAvis = listeAvis.iterator(); //On déclare un itérateur pour parcourir la liste
        while (itAvis.hasNext()) { //On parcourt la liste
            dlm.addElement((itAvis.next()).getNote()); //On ajoute la note de chaque avis
        }
        lAvis.setModel(dlm); //on affiche la liste de toutes les notes
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bRetour = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lAvis = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        taAvis = new javax.swing.JTextArea();
        lMoyenne = new javax.swing.JLabel();
        tfMoyenne = new javax.swing.JTextField();
        lNoteAvis = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        bRetour.setText("Retour");
        bRetour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRetourActionPerformed(evt);
            }
        });

        lAvis.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lAvisValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lAvis);

        taAvis.setColumns(20);
        taAvis.setRows(5);
        jScrollPane2.setViewportView(taAvis);

        lMoyenne.setText("Moyenne:");

        tfMoyenne.setEditable(false);

        lNoteAvis.setText("Avis triés par notes:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bRetour))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lNoteAvis)
                                .addGap(37, 37, 37)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 75, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(lMoyenne, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addComponent(tfMoyenne, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lMoyenne)
                    .addComponent(tfMoyenne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(lNoteAvis)))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bRetour)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bRetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRetourActionPerformed
        this.setVisible(false);
        ((Accueil) getParent()).getFicheCond().setVisible(true);
    }//GEN-LAST:event_bRetourActionPerformed

    private void lAvisValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lAvisValueChanged
        int i = lAvis.getSelectedIndex(); //On récupère l'index de la liste de notes des avis
        double note = 0;
        String commentaire = null;
        if (!lAvis.isSelectionEmpty()) { //S'il y a bien quelque chose de sélectionné
            note = listeAvis.get(i).getNote(); //On récupère la note de l'avis
            commentaire = listeAvis.get(i).getCommentaire(); //On récupère le commentaire de l'avis
        }
        taAvis.setText("Note: " + note + "\nCommentaire: " + commentaire); //On affiche ce message dans le text area
    }//GEN-LAST:event_lAvisValueChanged

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        try {
            (((Accueil) getParent()).getSite()).sauvegarde(); //On sauvegarde en prenant en compte de possibles erreurs
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erreur inconnue de sauvegarde.");
        } finally {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FAvisCond.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FAvisCond.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FAvisCond.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FAvisCond.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FAvisCond dialog = new FAvisCond(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bRetour;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lAvis;
    private javax.swing.JLabel lMoyenne;
    private javax.swing.JLabel lNoteAvis;
    private javax.swing.JTextArea taAvis;
    private javax.swing.JTextField tfMoyenne;
    // End of variables declaration//GEN-END:variables
}
